/// <reference types="vitest" />
import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import path from 'path';

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
  test: {
    globals: true,
    environmentMatchGlobs: [['tests/**/*.dom.test.ts', 'jsdom']],
    setupFiles: ['./src/tests/mswSetup.ts'],
  },
  resolve: {
    alias: {
      '@app': path.resolve(__dirname, 'src/app'),
      '@assets': path.resolve(__dirname, 'src/assets'),
      '@components': path.resolve(__dirname, 'src/app/components'),
      '@data': path.resolve(__dirname, 'src/app/data'),
      '@hooks': path.resolve(__dirname, 'src/app/hooks'),
      '@icons': path.resolve(__dirname, 'src/app/icons'),
      '@mocks': path.resolve(__dirname, 'src/tests/mocks'),
      '@routes': path.resolve(__dirname, 'src/app/routes'),
      '@services': path.resolve(__dirname, 'src/app/services'),
      '@src': path.resolve(__dirname, 'src'),
      '@scripts': path.resolve(__dirname, 'src/scripts'),
      '@ui': path.resolve(__dirname, 'src/app/components/ui'),
      '@utils': path.resolve(__dirname, 'src/app/utils'),
      '@jg-types': path.resolve(__dirname, 'src/app/types'),
      '@chrome-sw': path.resolve(__dirname, 'src/chrome-sw'),
    },
  },
  build: {
    minify: process.env.NODE_ENV !== 'development',
    rollupOptions: {
      input: {
        main: path.resolve(__dirname, 'index.html'),
        background: path.resolve(__dirname, 'src/background.ts'),
        jobgling: path.resolve(__dirname, 'src/jobgling.ts'),
      },
      output: {
        entryFileNames: (chunkInfo) => {
          if (chunkInfo.name === 'background') {
            return 'background.js';
          }
          if (chunkInfo.name === 'jobgling') {
            return 'jobgling.js';
          }
          return 'assets/[name]-[hash].js';
        },
      },
    },
  },
});
